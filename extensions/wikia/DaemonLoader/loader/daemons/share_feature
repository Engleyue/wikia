#!/usr/bin/perl

my $wikia_lib;
my $YML;
BEGIN {
	$wikia_lib = "/home/moli/wikia/wikia-utils/lib/"; 
	$wikia_lib = "/home/wikicities/conf/mediawiki/wikia-utils/lib" if !(-e $wikia_lib);
	$YML = "/home/moli/wikia/wikia-conf/DB.localhost.yml";
	if (! -e $YML) {
		$YML = undef;
	}
}

=needed modules
=cut
use strict;
use DBI;
use Cwd;
use Getopt::Long;
use Data::Dumper;

use Date::Manip;
use Switch;
use Spreadsheet::WriteExcel::Big;

use lib $wikia_lib;
use Wikia::LB;
use Wikia::Config;
use Wikia::Utils;
use Wikia::DB;

=default values
=cut
my $email_title = "Share feature";
my $XLS_FILE = "/images/reports/share_feature/share_feature_" . substr (&ParseDate("today"), 0, 8) . ".xls";

=help function
=cut
sub usage() {
    print <<EOF
share_feature [--help] [--usedb=s] 
	help - print this text
	TASKID - identifier of job
EOF
;	
}

=info
========================================
Main program 
========================================
=cut

=read script args 
=cut
my ($help, $TASKID, $all) = @_;
GetOptions('help' => \$help, 'TASKID=s' => \$TASKID, 'all' => \$all);

my @ltime = localtime;

=checking args
=cut
if ($help) {
	&usage();
	exit;
} elsif (!$TASKID) {
	print STDERR "Use option --help to know how to use script \n";
	exit;
}

my $lb = Wikia::LB->new( {yml => $YML } );
=config -> set logfile 
=cut
my $oConf = new Wikia::Config( {logfile => "/tmp/share_feature.log"} );

=db archive connection
=cut
my $db_ext = new Wikia::DB( { "dbh" => $lb->getConnection( Wikia::LB::DB_MASTER, undef, Wikia::LB::DBSTATSSHARED ) } );

=wikia utils 
=cut
my $oUtils = new Wikia::Utils();

=get task info
=cut
$oConf->log("\n\nTask ID: $TASKID started");

my $task = $db_ext->get_daemon_task($TASKID);
my (%DATA_ANONS, %DATA_PROVIDER) = ();
=foreach wiki generate data 
=cut
#--- set start time
my $start_sec = time();

my $select = "sf_provider_id, sum(sf_clickcount) as cnt";
my $from = "`dbstats`.`share_feature`";
my @where = ("sf_user_id = 0");
my @options = ("group by 1", "order by 2 desc");
my $sth = $db_ext->select_many($select, $from, \@where, \@options);
my ($cnt, $loop) = 0;
if ($sth) {
	while(my $values = $sth->fetchrow_hashref()) {
		$DATA_ANONS{$values->{sf_provider_id}} = $oUtils->intval($values->{cnt});
	}
	$sth->finish();
}
@where = undef;

$select = "sf_provider_id, sum(sf_clickcount) as cnt ";
$from = "`dbstats`.`share_feature`";
@where = ("sf_user_id > 0");
$sth = $db_ext->select_many($select, $from, \@where, \@options);
if ($sth) {
	while(my $values = $sth->fetchrow_hashref()) {
		$DATA_PROVIDER{$values->{sf_provider_id}} = $oUtils->intval($values->{cnt});
	}
	$sth->finish();
}

=checking results
=cut
$oConf->log("checking results and build XLS file");
my $res = ();

=XLS - default settings ========================
=init XLS spreadsheet
=cut
my $dir = "/images/reports/share_feature/";
mkdir($dir) if (!(-e $dir)) ;
unlink ($XLS_FILE);

my $workbook = Spreadsheet::WriteExcel::Big->new($XLS_FILE);
my @cols = ('A..Z', 'AA..AZ');
my $formatHdr = $workbook->add_format( bold => 1, color => 'black', align => 'center');
my $formatBody = $workbook->add_format( bold => 0, color => 'black', valign => 'vcenter', align => 'right');

=create XLS sheet with data
=cut
my $sheet = $workbook->add_worksheet('Anon provider clicks');
$sheet->activate();
my ($col, $row) = (0, 2); 
$sheet->write($row, $col, "Provider", $formatHdr); 
$sheet->write($row, $col+1, "Nbr clicks", $formatHdr); 
foreach my $prov_id (sort { $DATA_ANONS{$b} <=> $DATA_ANONS{$a} } keys %DATA_ANONS) {
	$row++;
	$sheet->write($row, $col, $prov_id, $formatBody); 
	$sheet->write($row, $col+1, $DATA_ANONS{$prov_id}, $formatBody); 
}

my $sheet2 = $workbook->add_worksheet('User provider clicks');
$sheet2->activate();
($col, $row) = (0, 2); 
$sheet2->write($row, $col, "Provider", $formatHdr); 
$sheet2->write($row, $col+1, "Nbr clicks", $formatHdr); 
foreach my $prov_id (sort { $DATA_PROVIDER{$b} <=> $DATA_PROVIDER{$a} } keys %DATA_PROVIDER) {
	$row++;
	$sheet2->write($row, $col, $prov_id, $formatBody); 
	$sheet2->write($row, $col+1, $DATA_PROVIDER{$prov_id}, $formatBody); 
}

=close XLS file
=cut
$workbook->close();

=finish
=cut
system("gzip -c $XLS_FILE > $XLS_FILE.gz") if ( -e $XLS_FILE );
my %updata = ("-dj_result_file" => "concat_ws(',', dj_result_file, '".$XLS_FILE.".gz')");
$oConf->log("update task info in database (subdomains)");
my $q_up = $db_ext->update_daemon_task( \%updata, $TASKID );
if ( $q_up ) {
	$oConf->log("send emails with report");
	$oUtils->send_file( $email_title, $task->{dj_result_emails}, $XLS_FILE . ".gz" );
}

=end of main loop
=cut
my $end_sec = time();
my @ts = gmtime($end_sec - $start_sec);

$oConf->log("Script processed ".sprintf ("%d hours %d minutes %d seconds",@ts[2,1,0]));
$db_ext->disconnect() if ($db_ext);

$oConf->log("process done");

1;
