var SponsorshipDashboard = {
	//params filled by PHP
	chartId: 0,
	datasets: [],
	fullTicks: [],
	hiddenSeries: [],
	monthly: null,
	ticks: [],
	//other params
	data: [],
	overview: null,
	plot: null,
	previousPoint: null,
	selectionRanges: null,

	//hard-code color indices to prevent them from shifting as series are turned on/off
	predefinedColors: ['#CB4B4B', '#4DA74D', '#EDC240', '#AFD8F8', '#9440ED', '#BEBE5D', '#FF00CC', '#0099FF', '#953737', '#387938', '#C29F34', '#8FB1CB', '#512381', '#999900', '#8B006F', '#006FB9', '#F1CECE', '#BEDFBE', '#F7E3A8', '#E2F1FC', '#D8BAF8', '#ECECD1', '#FF8BE8', '#D1ECFF'],

	plotOptions: {
		xaxis: {ticks: []},
		yaxis: {min: 0},
		grid: {
			backgroundColor: '#FFFFFF',
			hoverable: true
		},
		series: {
			points: {show: false},
			lines: {show: true}
		},
		legend: {show: false}
	},

	overviewOptions: {
		yaxis: {ticks: [], min: 0, autoscaleMargin: 0.1},
		xaxis: {ticks: []},
		grid: {backgroundColor: '#FFFFFF'},
		selection: {mode: 'x'},
		series: {
			lines: {show: true, lineWidth: 1},
			shadowSize: 1
		},
		legend: {show: false}
	},

	// console logging
	log: function(msg) {
		$().log(msg, 'SponsorshipDashboard');
	},

	//initialization - should be called by PHP generated script with passed extra data
	init: function(params) {
		this.log('init, params:');
		this.log(params);

		//add params generated by PHP
		$.extend(this, params);
		this.plotOptions.xaxis.ticks = params.ticks;

		//set default colors
		SponsorshipDashboard.plotOptions.colors = this.predefinedColors;
		SponsorshipDashboard.overviewOptions.colors = this.predefinedColors;

		//colorize series
		var colorNo = 0;
		$.each(this.datasets, function(key, val) {
			val.color = colorNo++;
		});

		//insert checkboxes
		this.choiceContainer = $('#choices' + this.chartId);
		this.log(this.datasets);
		$.each(this.datasets, function(key, val) {
			var tmpText = '<div class="colorHolder" style="background-color: ' + SponsorshipDashboard.predefinedColors[val.color] +'"><input type="checkbox" name="' + key + '" ';
			if ($.inArray(key, SponsorshipDashboard.hiddenSeries) == -1) {
				tmpText += ' checked="checked"';
			}
			tmpText = tmpText +' id="id' + key + SponsorshipDashboard.chartId + '"></div><label for="id' + key + SponsorshipDashboard.chartId + '"> ' + val.label + '</label><br/>';

			SponsorshipDashboard.choiceContainer.append(tmpText);
		});

		//bindings
		this.choiceContainer.find('input').add('#sponsorshipDashboardShowTrends').click(this.plotAccordingToChoices);

		$('#sponsorshipDashboardDownloadChart').click(this.downloadChart);
		
		$('#placeholder' + this.chartId)
			.bind('plothover', this.onPlotHover)
			.bind('plotselected', this.onPlotSelected);

		$('#sponsorship-dashboard-select' + this.chartId).bind('click', function() {
			SponsorshipDashboard.choiceContainer.find("INPUT[type='checkbox']").attr('checked', true);
			SponsorshipDashboard.plotAccordingToChoices();

		});

		$('#sponsorship-dashboard-deselect' + this.chartId).bind('click', function() {
			SponsorshipDashboard.choiceContainer.find("INPUT[type='checkbox']").attr('checked', false);
			SponsorshipDashboard.plotAccordingToChoices();
		});

		$('#overview' + this.chartId).bind('plotselected', function (event, ranges) {
			SponsorshipDashboard.plot.setSelection(ranges);
		});

		$('.datepicker').bind('change', this.drawFromPickers);

		//first draw
		this.plotAccordingToChoices();
	},

	onPlotHover: function (event, pos, item) {
		$("#x" + SponsorshipDashboard.chartId).text(pos.x.toFixed(2));
		$("#y" + SponsorshipDashboard.chartId).text(pos.y.toFixed(2));

		if (item) {
			if (SponsorshipDashboard.previousPoint != item.datapoint) {

				SponsorshipDashboard.previousPoint = item.datapoint;
				$("#tooltip" + SponsorshipDashboard.chartId).remove();
				var	x = item.datapoint[0].toFixed(2),
					y = item.datapoint[1];

				var xText = '';
				for (var i in SponsorshipDashboard.fullTicks) {
					if (SponsorshipDashboard.fullTicks[i][1] == item.datapoint[0]) {
						xText = SponsorshipDashboard.fullTicks[i][0];
					}
				}

				SponsorshipDashboard.showTooltip(item.pageX, item.pageY, xText + ' | ' + y + ' - ' + item.series.label);
			}
		} else {
			$("#tooltip" + SponsorshipDashboard.chartId).remove();
			SponsorshipDashboard.previousPoint = null;
		}
	},

	onPlotSelected: function (event, ranges) {
		// do the zooming
		SponsorshipDashboard.log('#placeholder' + SponsorshipDashboard.chartId + '.plotselected');

		var x1 = Math.round(ranges.xaxis.from),
			x2 = Math.round(ranges.xaxis.to);

		$.extend(true, SponsorshipDashboard.plotOptions, {
			xaxis: {
				min: x1,
				max: x2
			}
		});

		SponsorshipDashboard.selectionRanges = {
			x1: x1,
			x2: x2
		};

		var borderTicks = {};
		for (var i in SponsorshipDashboard.fullTicks) {
			if (SponsorshipDashboard.fullTicks[i][1] == x1) {
				borderTicks.from = SponsorshipDashboard.fullTicks[i];
				SponsorshipDashboard.log('borderTicks.from:' + borderTicks.from);
				var data2split = SponsorshipDashboard.fullTicks[i][0].split('-');
				$('#sd-year-from').val(data2split[0]);
				$('#sd-month-from').val(data2split[1]);
				if (!SponsorshipDashboard.monthly) {
					$('#sd-day-from').val(data2split[2]);
				}
			}
			if (SponsorshipDashboard.fullTicks[i][1] == x2) {
				borderTicks.to = SponsorshipDashboard.fullTicks[i];
				SponsorshipDashboard.log('borderTicks.to:' + borderTicks.to);
				var data2split = SponsorshipDashboard.fullTicks[i][0].split('-');
				$('#sd-year-to').val(data2split[0]);
				$('#sd-month-to').val(data2split[1]);
				if (!SponsorshipDashboard.monthly) {
					$('#sd-day-to').val(data2split[2]);
				}
			}
		}

		// don't fire event on the overview to prevent eternal loop
		SponsorshipDashboard.overview.setSelection(ranges, true);
		SponsorshipDashboard.plotAccordingToChoices(true, borderTicks);
	},

	downloadChart: function(e) {
		e.preventDefault();
		var canvas = SponsorshipDashboard.plot.getCanvas();
		var imageData = canvas.toDataURL();
		$.showModal('SponsorshipDashboard', '<div style="text-align: center"><img src="' + imageData + '" width="' + canvas.width + '" height="' + canvas.height + '"></div>');
//		imageData = imageData.replace('image/png', 'image/octet-stream');
//		document.location.href = imageData;
	},

	plotAccordingToChoices: function(stopRedrawOverview, borderTicks) {
		SponsorshipDashboard.log('plotAccordingToChoices');
		SponsorshipDashboard.data = [];
 		SponsorshipDashboard.choiceContainer.find('input:checked').each(function() {
			var key = $(this).attr('name');
			if (key && SponsorshipDashboard.datasets[key]) SponsorshipDashboard.data.push(SponsorshipDashboard.datasets[key]);
		});
		if (/*SponsorshipDashboard.data.length > 0*/ 1 /*per request in FB#4380*/) {
			var localOptions = $.extend(true, {}, SponsorshipDashboard.plotOptions);
			if (typeof borderTicks != 'undefined') {
				localOptions.xaxis.ticks.push([borderTicks.from[1], borderTicks.from[0]], [borderTicks.to[1], borderTicks.to[0]]);
			}
			if ($('#sponsorshipDashboardShowTrends').attr('checked')) {
				$.extend(true, localOptions, {trendline: {show: true}, lines: {show: false}, points: {show: true, radius:2}});
				$.extend(SponsorshipDashboard.overviewOptions, {trendline:{show:true}});
			} else {
				delete SponsorshipDashboard.overviewOptions['trendline'];
			}

			SponsorshipDashboard.plot = $.plot($("#placeholder" + SponsorshipDashboard.chartId), SponsorshipDashboard.data, localOptions);
			if (stopRedrawOverview !== true) {
				SponsorshipDashboard.overview = $.plot($("#overview" + SponsorshipDashboard.chartId), SponsorshipDashboard.data, SponsorshipDashboard.overviewOptions);
				if (SponsorshipDashboard.selectionRanges != null) {
					SponsorshipDashboard.overview.setSelection(SponsorshipDashboard.selectionRanges);
				}
			}
		}
	},

	showTooltip: function(x, y, contents) {
		$('<div id="tooltip' + SponsorshipDashboard.chartId + '">' + contents + '</div>').css({
			top: y + 5,
			left: x + 25,
			position: 'absolute',
			display: 'none',
			color: '#000',
			padding: '2px',
			'background-color': '#fff',
			opacity: 0.80,
			'z-index': 999
		}).appendTo('body').fadeIn(200);
	},

	drawFromPickers: function() {
		SponsorshipDashboard.log('drawFromPickers');

		var fromData = $('#sd-year-from').val() + '-' + $('#sd-month-from').val();
		var toData = $('#sd-year-to').val() + '-' + $('#sd-month-to').val();
		if (!SponsorshipDashboard.monthly) {
			fromData = fromData + '-' + $('#sd-day-from').val();
			toData = toData + '-' + $('#sd-day-to').val();
		}

		var fromDataAfter = 0;
		var toDataAfter = 0;
		var fromDataBuffer = 0;
		var toDataBuffer = 1;
		var fulltickAsInt = 0;

		for (var i in SponsorshipDashboard.fullTicks) {
			fulltickAsInt = SponsorshipDashboard.fullTicks[i][0].replace(/-/gi, '');
			if (parseInt(fromData.replace(/-/gi, '')) > fulltickAsInt) {
				fromDataBuffer = SponsorshipDashboard.fullTicks[i][1];
			}
			if (parseInt(toData.replace(/-/gi, '')) > fulltickAsInt) {
				toDataBuffer = SponsorshipDashboard.fullTicks[i][1];
			}
			if (fromData == SponsorshipDashboard.fullTicks[i][0]) {
				fromDataAfter = SponsorshipDashboard.fullTicks[i][1];
			}
			if (toData == SponsorshipDashboard.fullTicks[i][0]) {
				toDataAfter = SponsorshipDashboard.fullTicks[i][1];
			}
		}

		if (fromDataAfter == 0) fromDataAfter = fromDataBuffer;
		if (toDataAfter == 0) toDataAfter = toDataBuffer;

		SponsorshipDashboard.overview = $.plot($('#overview' + SponsorshipDashboard.chartId), SponsorshipDashboard.data, SponsorshipDashboard.overviewOptions);

		SponsorshipDashboard.log('fromDataAfter:' + fromDataAfter);
		SponsorshipDashboard.log('toDataAfter:' + toDataAfter);

		SponsorshipDashboard.overview.setSelection({x1: fromDataAfter, x2: toDataAfter});
	}
};