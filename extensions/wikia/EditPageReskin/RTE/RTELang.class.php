<?php

class RTELang {

	private static $messages;

	/**
	 * Add given mesage to array to be returned by getMessages()
	 */
	static private function addMessage($key, $value) {
		wfProfileIn(__METHOD__);

		$tree = explode('-', $key);
		$deep = count($tree);

		switch($deep) {
			case 1:
				self::$messages[ $tree[0] ] = $value;
				break;

			case 2:
				self::$messages[ $tree[0] ][ $tree[1] ] = $value;
				break;

			case 3:
				self::$messages[ $tree[0] ][ $tree[1] ][ $tree[2] ] = $value;
				break;
		}

		wfProfileOut(__METHOD__);
	}

	/**
	 * Return nested array with CK messages
	 *
	 * Messages are read in the following order:
	 * 1. CK.core.i18n.php - autogenerated messages from Ckeditor's JS files
	 * 2. CK.wikia.i18n.php - Wikia messages from custom features
	 * 3. messages localized locally (on per wiki basis using MediaWiki namespace pages)
	 */
	static public function getMessages($lang) {
		wfProfileIn(__METHOD__);

		// message files
		$dir = dirname(__FILE__);
		$msgFiles = array(
			// autogenerated from CKeditor's JS messages
			'CKcore' => $dir.'/i18n/CK.core.i18n.php',
			// Wikia additions and overrides
			'CKwikia' => $dir.'/i18n/CK.wikia.i18n.php',
		);

		// load messages file to get list of messages we should return:
		// 1. CKeditor's core messages
		$messages = array();
		require $msgFiles['CKcore'];
		$coreMessages = array_merge($messages['en'] /* always fallback to 'en' */, $messages[$lang]);
		$list = array_keys($messages['en']);

		// 2. Wikia specific messages
		$messages = array();
		require $msgFiles['CKwikia'];
		$coreMessages = array_merge($coreMessages, $messages['en'] /* always fallback to 'en' */, $messages[$lang]);
		$list = array_merge($list, array_keys($messages['en']));

		// convert flat array to nested array
		wfProfileIn(__METHOD__ . '::loop');

		self::$messages = array();

		foreach($list as $msgName) {
			// check for messages customized locallly via MW page
			$mwMsg = wfMsg($msgName);

			if (wfEmptyMsg($msgName, $mwMsg)) {
				// no message defined using MW page - use a message from CK message files
				$value = $coreMessages[$msgName];
			}
			else {
				// use "local" message from MW page
				$value = $mwMsg;
			}

			// add a message to the output
			$key = substr($msgName, 7);
			self::addMessage($key, $value);
		}
		ksort(self::$messages);

		wfProfileOut(__METHOD__ . '::loop');
		wfProfileOut(__METHOD__);
		return self::$messages;
	}
}
